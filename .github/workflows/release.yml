name: Release
python -m pip install --upgrade pip
pip install -r requirements.txt
- name: Train (deterministic)
run: |
python training/train.py --out-dir artifacts --model-version ${{ github.sha }}
echo ${{ github.sha }} > service/model_version.txt
- name: Log in to GHCR
uses: docker/login-action@v3
with:
registry: ghcr.io
username: ${{ github.actor }}
password: ${{ secrets.GITHUB_TOKEN }}
- name: Set up QEMU
uses: docker/setup-qemu-action@v3
- name: Set up Docker Buildx
uses: docker/setup-buildx-action@v3
- name: Docker metadata
id: meta
uses: docker/metadata-action@v5
with:
images: ${{ env.IMAGE_NAME }}
tags: |
type=ref,event=tag
- name: Build and push image (multi-arch)
uses: docker/build-push-action@v6
with:
context: .
platforms: linux/amd64,linux/arm64
push: true
tags: ${{ steps.meta.outputs.tags }}
labels: ${{ steps.meta.outputs.labels }}
- name: Smoke test container
run: |
TAG=${GITHUB_REF_NAME}
docker run -d --rm -p 8000:8000 --name triage ${{ env.IMAGE_NAME }}:${TAG}
# wait for boot
for i in {1..30}; do curl -sf localhost:8000/health && break || sleep 1; done
curl -s localhost:8000/health | jq .
curl -s -X POST localhost:8000/predict \
-H 'Content-Type: application/json' \
-d '{"age":0.02, "sex":-0.044, "bmi":0.06, "bp":-0.03, "s1":-0.02, "s2":0.03, "s3":-0.02, "s4":0.02, "s5":0.02, "s6":-0.001}' | jq .
docker stop triage
- name: Compute image size and update metrics.json
run: |
TAG=${GITHUB_REF_NAME}
# Pull manifest size as a proxy for compressed size; also compute uncompressed layer sum
SIZE=$(crane manifest ${{ env.IMAGE_NAME }}:${TAG} | jq -r '.config.size + ([.layers[].size] | add)')
# Write size in MB
SIZE_MB=$(python - <<'PY'
import os
s=int(os.environ['SIZE'])
print(round(s/1024/1024, 2))
PY
)
jq --arg size "$SIZE_MB" '.image_size_mb=($size|tonumber)' artifacts/metrics.json > artifacts/metrics2.json && mv artifacts/metrics2.json artifacts/metrics.json
shell: bash
- name: Upload metrics to Release
uses: softprops/action-gh-release@v2
with:
files: artifacts/metrics.json
generate_release_notes: true
